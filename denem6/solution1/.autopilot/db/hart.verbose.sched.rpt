

================================================================
== Vitis HLS Report for 'hart'
================================================================
* Date:           Wed Mar  6 07:47:00 2024

* Version:        2023.2.2 (Build 4101106 on Feb  9 2024)
* Project:        denem6
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvf1517-3-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  5.060 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        2|        3|  20.000 ns|  30.000 ns|    3|    4|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 8 9 2 5 6 7 
2 --> 3 
3 --> 4 
4 --> 
5 --> 4 
6 --> 9 
7 --> 9 
8 --> 9 
9 --> 4 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.09>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 0"   --->   Operation 10 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%spectopmodule_ln7 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1" [hart.cpp:7]   --->   Operation 11 'spectopmodule' 'spectopmodule_ln7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %inst"   --->   Operation 12 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %inst, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 13 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %pc"   --->   Operation 14 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %pc, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 15 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%pc_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %pc" [hart.cpp:7]   --->   Operation 16 'read' 'pc_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%inst_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %inst" [hart.cpp:7]   --->   Operation 17 'read' 'inst_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (1.09ns)   --->   "%store_ln27 = store i32 0, i32 0" [hart.cpp:27]   --->   Operation 18 'store' 'store_ln27' <Predicate = true> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%opcode = trunc i32 %inst_read" [hart.cpp:28]   --->   Operation 19 'trunc' 'opcode' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%rd = partselect i5 @_ssdm_op_PartSelect.i5.i32.i32.i32, i32 %inst_read, i32 7, i32 11" [hart.cpp:29]   --->   Operation 20 'partselect' 'rd' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%rs1 = partselect i5 @_ssdm_op_PartSelect.i5.i32.i32.i32, i32 %inst_read, i32 15, i32 19" [hart.cpp:30]   --->   Operation 21 'partselect' 'rs1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%rs2 = partselect i5 @_ssdm_op_PartSelect.i5.i32.i32.i32, i32 %inst_read, i32 20, i32 24" [hart.cpp:31]   --->   Operation 22 'partselect' 'rs2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%func3 = partselect i3 @_ssdm_op_PartSelect.i3.i32.i32.i32, i32 %inst_read, i32 12, i32 14" [hart.cpp:32]   --->   Operation 23 'partselect' 'func3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%tmp5 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %inst_read, i32 25, i32 31" [hart.cpp:33]   --->   Operation 24 'partselect' 'tmp5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%imm_11_0 = partselect i12 @_ssdm_op_PartSelect.i12.i32.i32.i32, i32 %inst_read, i32 20, i32 31" [hart.cpp:34]   --->   Operation 25 'partselect' 'imm_11_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%sext_ln34 = sext i12 %imm_11_0" [hart.cpp:34]   --->   Operation 26 'sext' 'sext_ln34' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %inst_read, i32 7" [hart.cpp:35]   --->   Operation 27 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%tmp_1 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %inst_read, i32 31" [hart.cpp:35]   --->   Operation 28 'bitselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%tmp_4 = partselect i4 @_ssdm_op_PartSelect.i4.i32.i32.i32, i32 %inst_read, i32 8, i32 11" [hart.cpp:36]   --->   Operation 29 'partselect' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%tmp_2 = partselect i6 @_ssdm_op_PartSelect.i6.i32.i32.i32, i32 %inst_read, i32 25, i32 30" [hart.cpp:35]   --->   Operation 30 'partselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%offset = bitconcatenate i13 @_ssdm_op_BitConcatenate.i13.i1.i1.i6.i4.i1, i1 %tmp_1, i1 %tmp, i6 %tmp_2, i4 %tmp_4, i1 0" [hart.cpp:35]   --->   Operation 31 'bitconcatenate' 'offset' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%tmp_5 = partselect i20 @_ssdm_op_PartSelect.i20.i32.i32.i32, i32 %inst_read, i32 12, i32 31" [hart.cpp:38]   --->   Operation 32 'partselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%imm_20_U = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i20.i12, i20 %tmp_5, i12 0" [hart.cpp:38]   --->   Operation 33 'bitconcatenate' 'imm_20_U' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.71ns)   --->   "%icmp_ln53 = icmp_eq  i5 %rd, i5 0" [hart.cpp:53]   --->   Operation 34 'icmp' 'icmp_ln53' <Predicate = true> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.70ns)   --->   "%switch_ln50 = switch i7 %opcode, void %cond.true, i7 51, void %sw.bb, i7 19, void %sw.bb74, i7 99, void %sw.bb92, i7 55, void %sw.bb103, i7 23, void %sw.bb110, i7 111, void %sw.bb118, i7 103, void %sw.bb127" [hart.cpp:50]   --->   Operation 35 'switch' 'switch_ln50' <Predicate = true> <Delay = 0.70>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%br_ln78 = br i1 %icmp_ln53, void %if.then129, void %if.end134" [hart.cpp:78]   --->   Operation 36 'br' 'br_ln78' <Predicate = (opcode == 103)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%br_ln73 = br i1 %icmp_ln53, void %if.then120, void %if.end125" [hart.cpp:73]   --->   Operation 37 'br' 'br_ln73' <Predicate = (opcode == 111)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%br_ln70 = br i1 %icmp_ln53, void %if.then112, void %if.end117" [hart.cpp:70]   --->   Operation 38 'br' 'br_ln70' <Predicate = (opcode == 23)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%br_ln67 = br i1 %icmp_ln53, void %if.then105, void %if.end109" [hart.cpp:67]   --->   Operation 39 'br' 'br_ln67' <Predicate = (opcode == 55)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 2.05>
ST_2 : Operation 40 [1/1] (0.95ns)   --->   "%add_ln78 = add i32 %pc_read, i32 4" [hart.cpp:78]   --->   Operation 40 'add' 'add_ln78' <Predicate = (!icmp_ln53)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln78 = zext i5 %rd" [hart.cpp:78]   --->   Operation 41 'zext' 'zext_ln78' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%rf_addr_10 = getelementptr i32 %rf, i64 0, i64 %zext_ln78" [hart.cpp:78]   --->   Operation 42 'getelementptr' 'rf_addr_10' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (1.09ns)   --->   "%store_ln78 = store i32 %add_ln78, i5 %rf_addr_10" [hart.cpp:78]   --->   Operation 43 'store' 'store_ln78' <Predicate = (!icmp_ln53)> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%br_ln78 = br void %if.end134" [hart.cpp:78]   --->   Operation 44 'br' 'br_ln78' <Predicate = (!icmp_ln53)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.09>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln79 = zext i5 %rs1" [hart.cpp:79]   --->   Operation 45 'zext' 'zext_ln79' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%rf_addr_11 = getelementptr i32 %rf, i64 0, i64 %zext_ln79" [hart.cpp:79]   --->   Operation 46 'getelementptr' 'rf_addr_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 47 [2/2] (1.09ns)   --->   "%rf_load_5 = load i5 %rf_addr_11" [hart.cpp:79]   --->   Operation 47 'load' 'rf_load_5' <Predicate = true> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_3 : Operation 48 [1/1] (0.61ns)   --->   "%icmp_ln80 = icmp_eq  i3 %func3, i3 0" [hart.cpp:80]   --->   Operation 48 'icmp' 'icmp_ln80' <Predicate = true> <Delay = 0.61> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 2.77>
ST_4 : Operation 49 [1/2] (1.09ns)   --->   "%rf_load_5 = load i5 %rf_addr_11" [hart.cpp:79]   --->   Operation 49 'load' 'rf_load_5' <Predicate = (opcode == 103)> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_4 : Operation 50 [1/1] (0.95ns)   --->   "%next_pc = add i32 %rf_load_5, i32 %sext_ln34" [hart.cpp:79]   --->   Operation 50 'add' 'next_pc' <Predicate = (opcode == 103)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%br_ln80 = br i1 %icmp_ln80, void %if.else, void %if.then140" [hart.cpp:80]   --->   Operation 51 'br' 'br_ln80' <Predicate = (opcode == 103)> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%next_pc_4 = bitset i32 @_ssdm_op_BitSet.i32.i32.i32.i1, i32 %next_pc, i32 0, i1 1" [hart.cpp:83]   --->   Operation 52 'bitset' 'next_pc_4' <Predicate = (opcode == 103 & !icmp_ln80)> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (0.71ns)   --->   "%br_ln0 = br void %cleanup"   --->   Operation 53 'br' 'br_ln0' <Predicate = (opcode == 103 & !icmp_ln80)> <Delay = 0.71>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "%next_pc_3 = bitset i32 @_ssdm_op_BitSet.i32.i32.i32.i1, i32 %next_pc, i32 0, i1 0" [hart.cpp:81]   --->   Operation 54 'bitset' 'next_pc_3' <Predicate = (opcode == 103 & icmp_ln80)> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (0.71ns)   --->   "%br_ln82 = br void %cleanup" [hart.cpp:82]   --->   Operation 55 'br' 'br_ln82' <Predicate = (opcode == 103 & icmp_ln80)> <Delay = 0.71>
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "%next_pc_5 = phi i32 0, void %if.end125, i32 %next_pc_3, void %if.then140, i32 %next_pc_4, void %if.else, i32 %next_pc_1, void %cond.true, i32 %next_pc_2, void %cond.false, i32 %sext_ln67_5, void %sw.bb47.i, i32 %sext_ln67_4, void %sw.bb35.i, i32 %sext_ln67_3, void %sw.bb24.i, i32 %sext_ln67_2, void %sw.bb13.i, i32 %sext_ln67_1, void %sw.bb2.i, i32 %sext_ln67, void %sw.bb.i, i32 1, void %sw.bb92"   --->   Operation 56 'phi' 'next_pc_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%ret_ln141 = ret i32 %next_pc_5" [hart.cpp:141]   --->   Operation 57 'ret' 'ret_ln141' <Predicate = true> <Delay = 0.00>

State 5 <SV = 1> <Delay = 2.05>
ST_5 : Operation 58 [1/1] (0.95ns)   --->   "%add_ln73 = add i32 %pc_read, i32 4" [hart.cpp:73]   --->   Operation 58 'add' 'add_ln73' <Predicate = (!icmp_ln53)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 59 [1/1] (0.00ns)   --->   "%zext_ln73 = zext i5 %rd" [hart.cpp:73]   --->   Operation 59 'zext' 'zext_ln73' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "%rf_addr_9 = getelementptr i32 %rf, i64 0, i64 %zext_ln73" [hart.cpp:73]   --->   Operation 60 'getelementptr' 'rf_addr_9' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_5 : Operation 61 [1/1] (1.09ns)   --->   "%store_ln73 = store i32 %add_ln73, i5 %rf_addr_9" [hart.cpp:73]   --->   Operation 61 'store' 'store_ln73' <Predicate = (!icmp_ln53)> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_5 : Operation 62 [1/1] (0.00ns)   --->   "%br_ln73 = br void %if.end125" [hart.cpp:73]   --->   Operation 62 'br' 'br_ln73' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_5 : Operation 63 [1/1] (0.71ns)   --->   "%br_ln75 = br void %cleanup" [hart.cpp:75]   --->   Operation 63 'br' 'br_ln75' <Predicate = true> <Delay = 0.71>

State 6 <SV = 1> <Delay = 2.05>
ST_6 : Operation 64 [1/1] (0.95ns)   --->   "%add_ln70 = add i32 %imm_20_U, i32 %pc_read" [hart.cpp:70]   --->   Operation 64 'add' 'add_ln70' <Predicate = (!icmp_ln53)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 65 [1/1] (0.00ns)   --->   "%zext_ln70 = zext i5 %rd" [hart.cpp:70]   --->   Operation 65 'zext' 'zext_ln70' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_6 : Operation 66 [1/1] (0.00ns)   --->   "%rf_addr_8 = getelementptr i32 %rf, i64 0, i64 %zext_ln70" [hart.cpp:70]   --->   Operation 66 'getelementptr' 'rf_addr_8' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_6 : Operation 67 [1/1] (1.09ns)   --->   "%store_ln70 = store i32 %add_ln70, i5 %rf_addr_8" [hart.cpp:70]   --->   Operation 67 'store' 'store_ln70' <Predicate = (!icmp_ln53)> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_6 : Operation 68 [1/1] (0.00ns)   --->   "%br_ln70 = br void %if.end117" [hart.cpp:70]   --->   Operation 68 'br' 'br_ln70' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_6 : Operation 69 [1/1] (0.00ns)   --->   "%br_ln0 = br void %cond.true"   --->   Operation 69 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 7 <SV = 1> <Delay = 1.09>
ST_7 : Operation 70 [1/1] (0.00ns)   --->   "%zext_ln67 = zext i5 %rd" [hart.cpp:67]   --->   Operation 70 'zext' 'zext_ln67' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_7 : Operation 71 [1/1] (0.00ns)   --->   "%rf_addr_7 = getelementptr i32 %rf, i64 0, i64 %zext_ln67" [hart.cpp:67]   --->   Operation 71 'getelementptr' 'rf_addr_7' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_7 : Operation 72 [1/1] (1.09ns)   --->   "%store_ln67 = store i32 %imm_20_U, i5 %rf_addr_7" [hart.cpp:67]   --->   Operation 72 'store' 'store_ln67' <Predicate = (!icmp_ln53)> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_7 : Operation 73 [1/1] (0.00ns)   --->   "%br_ln67 = br void %if.end109" [hart.cpp:67]   --->   Operation 73 'br' 'br_ln67' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_7 : Operation 74 [1/1] (0.00ns)   --->   "%br_ln0 = br void %cond.false"   --->   Operation 74 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 8 <SV = 1> <Delay = 1.09>
ST_8 : Operation 75 [1/1] (0.00ns)   --->   "%zext_ln62 = zext i5 %rs1" [hart.cpp:62]   --->   Operation 75 'zext' 'zext_ln62' <Predicate = (opcode == 99)> <Delay = 0.00>
ST_8 : Operation 76 [1/1] (0.00ns)   --->   "%rf_addr_3 = getelementptr i32 %rf, i64 0, i64 %zext_ln62" [hart.cpp:62]   --->   Operation 76 'getelementptr' 'rf_addr_3' <Predicate = (opcode == 99)> <Delay = 0.00>
ST_8 : Operation 77 [2/2] (1.09ns)   --->   "%op1 = load i5 %rf_addr_3" [hart.cpp:62]   --->   Operation 77 'load' 'op1' <Predicate = (opcode == 99)> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_8 : Operation 78 [1/1] (0.00ns)   --->   "%zext_ln62_1 = zext i5 %rs2" [hart.cpp:62]   --->   Operation 78 'zext' 'zext_ln62_1' <Predicate = (opcode == 99)> <Delay = 0.00>
ST_8 : Operation 79 [1/1] (0.00ns)   --->   "%rf_addr_4 = getelementptr i32 %rf, i64 0, i64 %zext_ln62_1" [hart.cpp:62]   --->   Operation 79 'getelementptr' 'rf_addr_4' <Predicate = (opcode == 99)> <Delay = 0.00>
ST_8 : Operation 80 [2/2] (1.09ns)   --->   "%op2 = load i5 %rf_addr_4" [hart.cpp:62]   --->   Operation 80 'load' 'op2' <Predicate = (opcode == 99)> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_8 : Operation 81 [1/1] (0.00ns)   --->   "%zext_ln57 = zext i5 %rs1" [hart.cpp:57]   --->   Operation 81 'zext' 'zext_ln57' <Predicate = (opcode == 19)> <Delay = 0.00>
ST_8 : Operation 82 [1/1] (0.00ns)   --->   "%rf_addr_2 = getelementptr i32 %rf, i64 0, i64 %zext_ln57" [hart.cpp:57]   --->   Operation 82 'getelementptr' 'rf_addr_2' <Predicate = (opcode == 19)> <Delay = 0.00>
ST_8 : Operation 83 [2/2] (1.09ns)   --->   "%rf_load_2 = load i5 %rf_addr_2" [hart.cpp:57]   --->   Operation 83 'load' 'rf_load_2' <Predicate = (opcode == 19)> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_8 : Operation 84 [1/1] (0.00ns)   --->   "%zext_ln52 = zext i5 %rs1" [hart.cpp:52]   --->   Operation 84 'zext' 'zext_ln52' <Predicate = (opcode == 51)> <Delay = 0.00>
ST_8 : Operation 85 [1/1] (0.00ns)   --->   "%rf_addr = getelementptr i32 %rf, i64 0, i64 %zext_ln52" [hart.cpp:52]   --->   Operation 85 'getelementptr' 'rf_addr' <Predicate = (opcode == 51)> <Delay = 0.00>
ST_8 : Operation 86 [2/2] (1.09ns)   --->   "%rf_load = load i5 %rf_addr" [hart.cpp:52]   --->   Operation 86 'load' 'rf_load' <Predicate = (opcode == 51)> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_8 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln52_1 = zext i5 %rs2" [hart.cpp:52]   --->   Operation 87 'zext' 'zext_ln52_1' <Predicate = (opcode == 51)> <Delay = 0.00>
ST_8 : Operation 88 [1/1] (0.00ns)   --->   "%rf_addr_1 = getelementptr i32 %rf, i64 0, i64 %zext_ln52_1" [hart.cpp:52]   --->   Operation 88 'getelementptr' 'rf_addr_1' <Predicate = (opcode == 51)> <Delay = 0.00>
ST_8 : Operation 89 [2/2] (1.09ns)   --->   "%rf_load_1 = load i5 %rf_addr_1" [hart.cpp:52]   --->   Operation 89 'load' 'rf_load_1' <Predicate = (opcode == 51)> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>

State 9 <SV = 2> <Delay = 5.06>
ST_9 : Operation 90 [1/2] (1.09ns)   --->   "%op1 = load i5 %rf_addr_3" [hart.cpp:62]   --->   Operation 90 'load' 'op1' <Predicate = (opcode == 99)> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_9 : Operation 91 [1/2] (1.09ns)   --->   "%op2 = load i5 %rf_addr_4" [hart.cpp:62]   --->   Operation 91 'load' 'op2' <Predicate = (opcode == 99)> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_9 : Operation 92 [1/1] (0.71ns)   --->   "%switch_ln68 = switch i3 %func3, void %cleanup, i3 0, void %sw.bb.i, i3 1, void %sw.bb2.i, i3 4, void %sw.bb13.i, i3 5, void %sw.bb24.i, i3 6, void %sw.bb35.i, i3 7, void %sw.bb47.i" [OP_AL_32I.cpp:68->hart.cpp:62]   --->   Operation 92 'switch' 'switch_ln68' <Predicate = (opcode == 99)> <Delay = 0.71>
ST_9 : Operation 93 [1/1] (0.95ns)   --->   "%icmp_ln74 = icmp_ult  i32 %op1, i32 %op2" [OP_AL_32I.cpp:74->hart.cpp:62]   --->   Operation 93 'icmp' 'icmp_ln74' <Predicate = (opcode == 99 & func3 == 7)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node returnval_6)   --->   "%xor_ln74 = xor i1 %icmp_ln74, i1 1" [OP_AL_32I.cpp:74->hart.cpp:62]   --->   Operation 94 'xor' 'xor_ln74' <Predicate = (opcode == 99 & func3 == 7)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 95 [1/1] (0.38ns) (out node of the LUT)   --->   "%returnval_6 = select i1 %xor_ln74, i13 %offset, i13 4" [OP_AL_32I.cpp:74->hart.cpp:62]   --->   Operation 95 'select' 'returnval_6' <Predicate = (opcode == 99 & func3 == 7)> <Delay = 0.38> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 96 [1/1] (0.00ns)   --->   "%sext_ln67_5 = sext i13 %returnval_6" [OP_AL_32I.cpp:67->hart.cpp:62]   --->   Operation 96 'sext' 'sext_ln67_5' <Predicate = (opcode == 99 & func3 == 7)> <Delay = 0.00>
ST_9 : Operation 97 [1/1] (0.71ns)   --->   "%br_ln74 = br void %cleanup" [OP_AL_32I.cpp:74->hart.cpp:62]   --->   Operation 97 'br' 'br_ln74' <Predicate = (opcode == 99 & func3 == 7)> <Delay = 0.71>
ST_9 : Operation 98 [1/1] (0.95ns)   --->   "%icmp_ln73 = icmp_ult  i32 %op1, i32 %op2" [OP_AL_32I.cpp:73->hart.cpp:62]   --->   Operation 98 'icmp' 'icmp_ln73' <Predicate = (opcode == 99 & func3 == 6)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 99 [1/1] (0.38ns)   --->   "%returnval_5 = select i1 %icmp_ln73, i13 %offset, i13 4" [OP_AL_32I.cpp:73->hart.cpp:62]   --->   Operation 99 'select' 'returnval_5' <Predicate = (opcode == 99 & func3 == 6)> <Delay = 0.38> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 100 [1/1] (0.00ns)   --->   "%sext_ln67_4 = sext i13 %returnval_5" [OP_AL_32I.cpp:67->hart.cpp:62]   --->   Operation 100 'sext' 'sext_ln67_4' <Predicate = (opcode == 99 & func3 == 6)> <Delay = 0.00>
ST_9 : Operation 101 [1/1] (0.71ns)   --->   "%br_ln73 = br void %cleanup" [OP_AL_32I.cpp:73->hart.cpp:62]   --->   Operation 101 'br' 'br_ln73' <Predicate = (opcode == 99 & func3 == 6)> <Delay = 0.71>
ST_9 : Operation 102 [1/1] (0.95ns)   --->   "%icmp_ln72 = icmp_slt  i32 %op1, i32 %op2" [OP_AL_32I.cpp:72->hart.cpp:62]   --->   Operation 102 'icmp' 'icmp_ln72' <Predicate = (opcode == 99 & func3 == 5)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 103 [1/1] (0.00ns) (grouped into LUT with out node returnval_4)   --->   "%xor_ln72 = xor i1 %icmp_ln72, i1 1" [OP_AL_32I.cpp:72->hart.cpp:62]   --->   Operation 103 'xor' 'xor_ln72' <Predicate = (opcode == 99 & func3 == 5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 104 [1/1] (0.38ns) (out node of the LUT)   --->   "%returnval_4 = select i1 %xor_ln72, i13 %offset, i13 4" [OP_AL_32I.cpp:72->hart.cpp:62]   --->   Operation 104 'select' 'returnval_4' <Predicate = (opcode == 99 & func3 == 5)> <Delay = 0.38> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 105 [1/1] (0.00ns)   --->   "%sext_ln67_3 = sext i13 %returnval_4" [OP_AL_32I.cpp:67->hart.cpp:62]   --->   Operation 105 'sext' 'sext_ln67_3' <Predicate = (opcode == 99 & func3 == 5)> <Delay = 0.00>
ST_9 : Operation 106 [1/1] (0.71ns)   --->   "%br_ln72 = br void %cleanup" [OP_AL_32I.cpp:72->hart.cpp:62]   --->   Operation 106 'br' 'br_ln72' <Predicate = (opcode == 99 & func3 == 5)> <Delay = 0.71>
ST_9 : Operation 107 [1/1] (0.95ns)   --->   "%icmp_ln71 = icmp_slt  i32 %op1, i32 %op2" [OP_AL_32I.cpp:71->hart.cpp:62]   --->   Operation 107 'icmp' 'icmp_ln71' <Predicate = (opcode == 99 & func3 == 4)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 108 [1/1] (0.38ns)   --->   "%returnval_3 = select i1 %icmp_ln71, i13 %offset, i13 4" [OP_AL_32I.cpp:71->hart.cpp:62]   --->   Operation 108 'select' 'returnval_3' <Predicate = (opcode == 99 & func3 == 4)> <Delay = 0.38> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 109 [1/1] (0.00ns)   --->   "%sext_ln67_2 = sext i13 %returnval_3" [OP_AL_32I.cpp:67->hart.cpp:62]   --->   Operation 109 'sext' 'sext_ln67_2' <Predicate = (opcode == 99 & func3 == 4)> <Delay = 0.00>
ST_9 : Operation 110 [1/1] (0.71ns)   --->   "%br_ln71 = br void %cleanup" [OP_AL_32I.cpp:71->hart.cpp:62]   --->   Operation 110 'br' 'br_ln71' <Predicate = (opcode == 99 & func3 == 4)> <Delay = 0.71>
ST_9 : Operation 111 [1/1] (0.95ns)   --->   "%icmp_ln70 = icmp_ne  i32 %op1, i32 %op2" [OP_AL_32I.cpp:70->hart.cpp:62]   --->   Operation 111 'icmp' 'icmp_ln70' <Predicate = (opcode == 99 & func3 == 1)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 112 [1/1] (0.38ns)   --->   "%returnval_2 = select i1 %icmp_ln70, i13 %offset, i13 4" [OP_AL_32I.cpp:70->hart.cpp:62]   --->   Operation 112 'select' 'returnval_2' <Predicate = (opcode == 99 & func3 == 1)> <Delay = 0.38> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 113 [1/1] (0.00ns)   --->   "%sext_ln67_1 = sext i13 %returnval_2" [OP_AL_32I.cpp:67->hart.cpp:62]   --->   Operation 113 'sext' 'sext_ln67_1' <Predicate = (opcode == 99 & func3 == 1)> <Delay = 0.00>
ST_9 : Operation 114 [1/1] (0.71ns)   --->   "%br_ln70 = br void %cleanup" [OP_AL_32I.cpp:70->hart.cpp:62]   --->   Operation 114 'br' 'br_ln70' <Predicate = (opcode == 99 & func3 == 1)> <Delay = 0.71>
ST_9 : Operation 115 [1/1] (0.95ns)   --->   "%icmp_ln69 = icmp_eq  i32 %op1, i32 %op2" [OP_AL_32I.cpp:69->hart.cpp:62]   --->   Operation 115 'icmp' 'icmp_ln69' <Predicate = (opcode == 99 & func3 == 0)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 116 [1/1] (0.38ns)   --->   "%returnval_1 = select i1 %icmp_ln69, i13 %offset, i13 4" [OP_AL_32I.cpp:69->hart.cpp:62]   --->   Operation 116 'select' 'returnval_1' <Predicate = (opcode == 99 & func3 == 0)> <Delay = 0.38> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 117 [1/1] (0.00ns)   --->   "%sext_ln67 = sext i13 %returnval_1" [OP_AL_32I.cpp:67->hart.cpp:62]   --->   Operation 117 'sext' 'sext_ln67' <Predicate = (opcode == 99 & func3 == 0)> <Delay = 0.00>
ST_9 : Operation 118 [1/1] (0.71ns)   --->   "%br_ln69 = br void %cleanup" [OP_AL_32I.cpp:69->hart.cpp:62]   --->   Operation 118 'br' 'br_ln69' <Predicate = (opcode == 99 & func3 == 0)> <Delay = 0.71>
ST_9 : Operation 119 [1/2] (1.09ns)   --->   "%rf_load_2 = load i5 %rf_addr_2" [hart.cpp:57]   --->   Operation 119 'load' 'rf_load_2' <Predicate = (opcode == 19)> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_9 : Operation 120 [1/1] (2.86ns)   --->   "%return_val_1 = call i32 @OP_AL_32I, i6 19, i7 %tmp5, i3 %func3, i32 %rf_load_2, i32 %sext_ln34" [hart.cpp:57]   --->   Operation 120 'call' 'return_val_1' <Predicate = (opcode == 19)> <Delay = 2.86> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 121 [1/1] (0.00ns)   --->   "%trunc_ln42_1 = trunc i32 %return_val_1" [hart.cpp:42]   --->   Operation 121 'trunc' 'trunc_ln42_1' <Predicate = (opcode == 19)> <Delay = 0.00>
ST_9 : Operation 122 [1/1] (0.00ns)   --->   "%br_ln58 = br i1 %icmp_ln53, void %if.then84, void %if.end89" [hart.cpp:58]   --->   Operation 122 'br' 'br_ln58' <Predicate = (opcode == 19)> <Delay = 0.00>
ST_9 : Operation 123 [1/1] (0.00ns)   --->   "%trunc_ln2 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %return_val_1, i32 1, i32 31" [hart.cpp:58]   --->   Operation 123 'partselect' 'trunc_ln2' <Predicate = (opcode == 19 & !icmp_ln53)> <Delay = 0.00>
ST_9 : Operation 124 [1/1] (0.00ns)   --->   "%sext_ln58 = sext i31 %trunc_ln2" [hart.cpp:58]   --->   Operation 124 'sext' 'sext_ln58' <Predicate = (opcode == 19 & !icmp_ln53)> <Delay = 0.00>
ST_9 : Operation 125 [1/1] (0.00ns)   --->   "%zext_ln58 = zext i5 %rd" [hart.cpp:58]   --->   Operation 125 'zext' 'zext_ln58' <Predicate = (opcode == 19 & !icmp_ln53)> <Delay = 0.00>
ST_9 : Operation 126 [1/1] (0.00ns)   --->   "%rf_addr_6 = getelementptr i32 %rf, i64 0, i64 %zext_ln58" [hart.cpp:58]   --->   Operation 126 'getelementptr' 'rf_addr_6' <Predicate = (opcode == 19 & !icmp_ln53)> <Delay = 0.00>
ST_9 : Operation 127 [1/1] (1.09ns)   --->   "%store_ln58 = store i32 %sext_ln58, i5 %rf_addr_6" [hart.cpp:58]   --->   Operation 127 'store' 'store_ln58' <Predicate = (opcode == 19 & !icmp_ln53)> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_9 : Operation 128 [1/1] (0.00ns)   --->   "%br_ln58 = br void %if.end89" [hart.cpp:58]   --->   Operation 128 'br' 'br_ln58' <Predicate = (opcode == 19 & !icmp_ln53)> <Delay = 0.00>
ST_9 : Operation 129 [1/1] (0.00ns)   --->   "%br_ln138 = br i1 %trunc_ln42_1, void %cond.false, void %cond.true" [hart.cpp:138]   --->   Operation 129 'br' 'br_ln138' <Predicate = (opcode == 19)> <Delay = 0.00>
ST_9 : Operation 130 [1/2] (1.09ns)   --->   "%rf_load = load i5 %rf_addr" [hart.cpp:52]   --->   Operation 130 'load' 'rf_load' <Predicate = (opcode == 51)> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_9 : Operation 131 [1/2] (1.09ns)   --->   "%rf_load_1 = load i5 %rf_addr_1" [hart.cpp:52]   --->   Operation 131 'load' 'rf_load_1' <Predicate = (opcode == 51)> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_9 : Operation 132 [1/1] (2.86ns)   --->   "%return_val = call i32 @OP_AL_32I, i6 51, i7 %tmp5, i3 %func3, i32 %rf_load, i32 %rf_load_1" [hart.cpp:52]   --->   Operation 132 'call' 'return_val' <Predicate = (opcode == 51)> <Delay = 2.86> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 133 [1/1] (0.00ns)   --->   "%trunc_ln42 = trunc i32 %return_val" [hart.cpp:42]   --->   Operation 133 'trunc' 'trunc_ln42' <Predicate = (opcode == 51)> <Delay = 0.00>
ST_9 : Operation 134 [1/1] (0.00ns)   --->   "%br_ln53 = br i1 %icmp_ln53, void %if.then, void %sw.epilog" [hart.cpp:53]   --->   Operation 134 'br' 'br_ln53' <Predicate = (opcode == 51)> <Delay = 0.00>
ST_9 : Operation 135 [1/1] (0.00ns)   --->   "%trunc_ln1 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %return_val, i32 1, i32 31" [hart.cpp:53]   --->   Operation 135 'partselect' 'trunc_ln1' <Predicate = (opcode == 51 & !icmp_ln53)> <Delay = 0.00>
ST_9 : Operation 136 [1/1] (0.00ns)   --->   "%sext_ln53 = sext i31 %trunc_ln1" [hart.cpp:53]   --->   Operation 136 'sext' 'sext_ln53' <Predicate = (opcode == 51 & !icmp_ln53)> <Delay = 0.00>
ST_9 : Operation 137 [1/1] (0.00ns)   --->   "%zext_ln53 = zext i5 %rd" [hart.cpp:53]   --->   Operation 137 'zext' 'zext_ln53' <Predicate = (opcode == 51 & !icmp_ln53)> <Delay = 0.00>
ST_9 : Operation 138 [1/1] (0.00ns)   --->   "%rf_addr_5 = getelementptr i32 %rf, i64 0, i64 %zext_ln53" [hart.cpp:53]   --->   Operation 138 'getelementptr' 'rf_addr_5' <Predicate = (opcode == 51 & !icmp_ln53)> <Delay = 0.00>
ST_9 : Operation 139 [1/1] (1.09ns)   --->   "%store_ln53 = store i32 %sext_ln53, i5 %rf_addr_5" [hart.cpp:53]   --->   Operation 139 'store' 'store_ln53' <Predicate = (opcode == 51 & !icmp_ln53)> <Delay = 1.09> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_9 : Operation 140 [1/1] (0.00ns)   --->   "%br_ln53 = br void %sw.epilog" [hart.cpp:53]   --->   Operation 140 'br' 'br_ln53' <Predicate = (opcode == 51 & !icmp_ln53)> <Delay = 0.00>
ST_9 : Operation 141 [1/1] (0.00ns)   --->   "%br_ln138 = br i1 %trunc_ln42, void %cond.false, void %cond.true" [hart.cpp:138]   --->   Operation 141 'br' 'br_ln138' <Predicate = (opcode == 51)> <Delay = 0.00>
ST_9 : Operation 142 [1/1] (0.95ns)   --->   "%next_pc_2 = add i32 %pc_read, i32 4" [hart.cpp:138]   --->   Operation 142 'add' 'next_pc_2' <Predicate = (opcode == 55) | (opcode == 19 & !trunc_ln42_1) | (opcode == 51 & !trunc_ln42)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 143 [1/1] (0.71ns)   --->   "%br_ln138 = br void %cleanup" [hart.cpp:138]   --->   Operation 143 'br' 'br_ln138' <Predicate = (opcode == 55) | (opcode == 19 & !trunc_ln42_1) | (opcode == 51 & !trunc_ln42)> <Delay = 0.71>
ST_9 : Operation 144 [1/1] (0.95ns)   --->   "%next_pc_1 = add i32 %pc_read, i32 5" [hart.cpp:138]   --->   Operation 144 'add' 'next_pc_1' <Predicate = (opcode != 51 & opcode != 19 & opcode != 99 & opcode != 55 & opcode != 111 & opcode != 103) | (opcode == 23) | (opcode == 19 & trunc_ln42_1) | (opcode == 51 & trunc_ln42)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 145 [1/1] (0.71ns)   --->   "%br_ln138 = br void %cleanup" [hart.cpp:138]   --->   Operation 145 'br' 'br_ln138' <Predicate = (opcode != 51 & opcode != 19 & opcode != 99 & opcode != 55 & opcode != 111 & opcode != 103) | (opcode == 23) | (opcode == 19 & trunc_ln42_1) | (opcode == 51 & trunc_ln42)> <Delay = 0.71>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.099ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln27', hart.cpp:27) of constant 0 on array 'rf' [12]  (1.099 ns)

 <State 2>: 2.052ns
The critical path consists of the following:
	'add' operation 32 bit ('add_ln78', hart.cpp:78) [33]  (0.953 ns)
	'store' operation 0 bit ('store_ln78', hart.cpp:78) of variable 'add_ln78', hart.cpp:78 on array 'rf' [36]  (1.099 ns)

 <State 3>: 1.099ns
The critical path consists of the following:
	'getelementptr' operation 5 bit ('rf_addr_11', hart.cpp:79) [40]  (0.000 ns)
	'load' operation 32 bit ('rf_load_5', hart.cpp:79) on array 'rf' [41]  (1.099 ns)

 <State 4>: 2.770ns
The critical path consists of the following:
	'load' operation 32 bit ('rf_load_5', hart.cpp:79) on array 'rf' [41]  (1.099 ns)
	'add' operation 32 bit ('next_pc', hart.cpp:79) [42]  (0.953 ns)
	multiplexor before 'phi' operation 32 bit ('next_pc') with incoming values : ('next_pc', hart.cpp:83) ('next_pc', hart.cpp:81) ('sext_ln67_5', OP_AL_32I.cpp:67->hart.cpp:62) ('sext_ln67_4', OP_AL_32I.cpp:67->hart.cpp:62) ('sext_ln67_3', OP_AL_32I.cpp:67->hart.cpp:62) ('sext_ln67_2', OP_AL_32I.cpp:67->hart.cpp:62) ('sext_ln67_1', OP_AL_32I.cpp:67->hart.cpp:62) ('sext_ln67', OP_AL_32I.cpp:67->hart.cpp:62) ('next_pc', hart.cpp:138) [162]  (0.718 ns)
	'phi' operation 32 bit ('next_pc') with incoming values : ('next_pc', hart.cpp:83) ('next_pc', hart.cpp:81) ('sext_ln67_5', OP_AL_32I.cpp:67->hart.cpp:62) ('sext_ln67_4', OP_AL_32I.cpp:67->hart.cpp:62) ('sext_ln67_3', OP_AL_32I.cpp:67->hart.cpp:62) ('sext_ln67_2', OP_AL_32I.cpp:67->hart.cpp:62) ('sext_ln67_1', OP_AL_32I.cpp:67->hart.cpp:62) ('sext_ln67', OP_AL_32I.cpp:67->hart.cpp:62) ('next_pc', hart.cpp:138) [162]  (0.000 ns)

 <State 5>: 2.052ns
The critical path consists of the following:
	'add' operation 32 bit ('add_ln73', hart.cpp:73) [54]  (0.953 ns)
	'store' operation 0 bit ('store_ln73', hart.cpp:73) of variable 'add_ln73', hart.cpp:73 on array 'rf' [57]  (1.099 ns)

 <State 6>: 2.052ns
The critical path consists of the following:
	'add' operation 32 bit ('add_ln70', hart.cpp:70) [64]  (0.953 ns)
	'store' operation 0 bit ('store_ln70', hart.cpp:70) of variable 'add_ln70', hart.cpp:70 on array 'rf' [67]  (1.099 ns)

 <State 7>: 1.099ns
The critical path consists of the following:
	'getelementptr' operation 5 bit ('rf_addr_7', hart.cpp:67) [75]  (0.000 ns)
	'store' operation 0 bit ('store_ln67', hart.cpp:67) of variable 'imm_20_U', hart.cpp:38 on array 'rf' [76]  (1.099 ns)

 <State 8>: 1.099ns
The critical path consists of the following:
	'getelementptr' operation 5 bit ('rf_addr_3', hart.cpp:62) [82]  (0.000 ns)
	'load' operation 32 bit ('op1', hart.cpp:62) on array 'rf' [83]  (1.099 ns)

 <State 9>: 5.060ns
The critical path consists of the following:
	'load' operation 32 bit ('rf_load_2', hart.cpp:57) on array 'rf' [123]  (1.099 ns)
	'call' operation 32 bit ('return_val', hart.cpp:57) to 'OP_AL_32I' [124]  (2.862 ns)
	'store' operation 0 bit ('store_ln58', hart.cpp:58) of variable 'sext_ln58', hart.cpp:58 on array 'rf' [132]  (1.099 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
